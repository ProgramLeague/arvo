data False := .
def exfalso : False -> (A : Type) -> A :=
  \x. \A. False_elim (\z. A) x.

data True := I.

def id : (A : Type) -> A -> A := \_.\a. a.

data prod (A : Type) (B : Type) :=
  prod_intro : A -> B -> prod A B.

data sum (A : Type) (B : Type) :=
  inj_l : A -> sum A B
| inj_r : B -> sum A B.

axiom admit : (A : Type) -> A.
